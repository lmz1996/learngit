参数处理
	1、单个参数：	#{参数名}
	2、多个参数：	#{参数名}
		mybatis会做特殊处理
			多个参数封装成一个map
			key:param1....paramN
			value:就是传过的值、
			
		命名参数：明确指定封装参数时map的key
		@Param("id")
		多个参数封装成一个map key会使用@Param注解指定的值
		
		
	多个参数的时候，多个参数恰好是我们的一个bean,我们就可以直接启用这个bean
	
	假如部分不是bean，我们就可以创建一个参数对象 对象类型就是map,#{}对应的key就是map里的key
	
	
	分页的时候，封装bean|pojo
	page:{
		start:开始记录号
		end:结尾的记录号
	}
	
封装扩展

	1、public Emp getEmpByIdName(@Param("empno")Integer empno,String eName);
	
	   select * from emp where empno = #{empno} and ename=#{param1}
	   
	2、public Emp getEmpByIdName(@Param("empno")Integer empno,Emp emp);   
	
		select * from emp where empno = #{empno} and ename=#{param1.ename}
		
	3、public Emp getEmpByIdName(@Param("empno")Integer empno,@Param("emp")Emp emp);   
	
		select * from emp where empno = #{empno} and ename=#{emp.ename}	
	
	4、public Emp getEmpByIdName(List<Integer> ids);  
		//查询List中的第一个值第一个ID
		select * from emp where empid = #{empno}
		
		//接受的参数是一个集合collection set list 
		select * from emp where empid = #{ids[0]}
		
		select * from emp where empid = #{list[0]}|select * from emp where empid = #{collection[0]}
		
		集合mybatis也会做特殊处理，把集合放在map,
		
		key :collection|list
		value :[1,2,3]
		key:collection list key:list
		------------------------------------------
		//接受的参数是数组 array
		
		key:array
	
		select * from emp where empid = #{array[0]}
		
		
		
		作业：传递集合的三种情况 做出程序

Dynsmic sql： 动态SQL

	
	